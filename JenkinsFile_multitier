pipeline {
  agent none
  environment {
    DB_CREDS=credentials('rdb-mysql-db-credentials')
  }  
  stages {
    
    stage('Status') {
        
     agent { 
         dockerfile
             {
                 label 'build-in'
                filename 'Dockerfile'
            }
        }
      steps {
   
        sh 'liquibase status --url="jdbc:mysql://mysqldb3.c5kvdhfba2on.ap-south-1.rds.amazonaws.com:3306/myapp" --changeLogFile=my_app-wrapper.xml  --username=$DB_CREDS_USR --password=$DB_CREDS_PSW'
   
      }
    }
    stage('Update') {
       agent { 
         dockerfile
             {
                 label 'build-in'
                filename 'Dockerfile'
            }
        }   
      steps {
        sh 'liquibase update --url="jdbc:mysql://mysqldb3.c5kvdhfba2on.ap-south-1.rds.amazonaws.com:3306/myapp" --changeLogFile=my_app-wrapper.xml --username=$DB_CREDS_USR --password=$DB_CREDS_PSW'
      }
    }
  
 
        stage('scm') {
            agent { label('ansible') } 
            steps {
               git 'https://github.com/Tharani95/java-maven-sample-war.git'
            }
        }
	stage('build') {
            agent { label('ansible') } 
            steps {
               sh 'mvn clean package'
            }
        }
        stage('deploy') {
            
            agent { label('ansible') } 
            steps {
               sh 'ansible-playbook tomcat_deploy.yaml'
            }
        }
    }
}
