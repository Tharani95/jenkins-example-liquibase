pipeline {
   agent { 
    dockerfile
    {
    label 'build-in'
    filename 'Dockerfile'
    }
    }
  environment {
    DB_CREDS=credentials('rdb-mysql-db-credentials')
  }  
  stages {
    stage('Status') {
   
      steps {
   
        sh 'liquibase status --url="jdbc:mysql://mysqldb3.c5kvdhfba2on.ap-south-1.rds.amazonaws.com:3306/myapp" --changeLogFile=my_app-wrapper.xml  --username=$DB_CREDS_USR --password=$DB_CREDS_PSW'
   
      }
    }
    stage('Update') {
      steps {
        sh 'liquibase update --url="jdbc:mysql://mysqldb3.c5kvdhfba2on.ap-south-1.rds.amazonaws.com:3306/myapp" --changeLogFile=my_app-wrapper.xml --username=$DB_CREDS_USR --password=$DB_CREDS_PSW'
        sh 'liquibase tag wrapper2.0 --url="jdbc:mysql://mysqldb3.c5kvdhfba2on.ap-south-1.rds.amazonaws.com:3306/myapp" --username=$DB_CREDS_USR --password=$DB_CREDS_PSW'
      }
    }
    stage('rollback') {
      steps {
        sh 'liquibase rollback --url="jdbc:mysql://mysqldb3.c5kvdhfba2on.ap-south-1.rds.amazonaws.com:3306/myapp"  --changeLogFile=my_app-wrapper.xml --username=$DB_CREDS_USR --password=$DB_CREDS_PSW --tag=wrapper1.0'
      }
    }
  }
  post {
    always {
      node('build-in'){ 
      cleanWs()
      }
    }
  }
}
